CREATE DATABASE IF NOT EXISTS krautundrueben;
USE krautundrueben;

CREATE TABLE IF NOT EXISTS krautundrueben.KUNDE
(
    KUNDENNR     BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    NACHNAME     VARCHAR(50),
    VORNAME      VARCHAR(50),
    GEBURTSDATUM DATE,
    STRASSE      VARCHAR(50),
    HAUSNR       VARCHAR(6),
    PLZ          VARCHAR(5),
    ORT          VARCHAR(50),
    TELEFON      VARCHAR(25),
    EMAIL        VARCHAR(50),
    PRIMARY KEY (KUNDENNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.ZUTAT
(
    ZUTATENNR		    BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    BEZEICHNUNG         VARCHAR(50),
    EINHEIT        	    VARCHAR (25),
    NETTOPREIS          DECIMAL(10,2),
    BESTAND             INTEGER,
    LIEFERANT			INTEGER,
    KALORIEN			INTEGER,
    KOHLENHYDRATE		DECIMAL (10,2),
    PROTEIN				DECIMAL(10,2),
    PRIMARY KEY (ZUTATENNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.BESTELLUNG
(
    BESTELLNR        BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    KUNDENNR         BIGINT UNSIGNED,
    BESTELLDATUM     DATE,
    RECHNUNGSBETRAG  DECIMAL(10,2),
    PRIMARY KEY (BESTELLNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.BESTELLUNGZUTAT
(
    BESTELLNR       BIGINT UNSIGNED NOT NULL,
    ZUTATENNR       BIGINT UNSIGNED,
    MENGE     		INTEGER,
    PRIMARY KEY (BESTELLNR, ZUTATENNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.LIEFERANT
(
    LIEFERANTENNR   BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    LIEFERANTENNAME VARCHAR(50),
    STRASSE         VARCHAR(50),
    HAUSNR			VARCHAR(6),
    PLZ             VARCHAR(5),
    ORT             VARCHAR(50),
    TELEFON			VARCHAR(25),
    EMAIL           VARCHAR(50),
    PRIMARY KEY (LIEFERANTENNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.REZEPT
(
    REZEPTNR 		BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    REZEPTNAME 		VARCHAR(50),
    GESAMTKALORIEN 	INTEGER,
    GESAMTKH 		INTEGER,
    GESAMTPROTEIN 	INTEGER,
    PRIMARY KEY (REZEPTNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.REZEPTZUTAT
(
    REZEPTNR 	BIGINT UNSIGNED NOT NULL,
    ZUTATENNR 	BIGINT UNSIGNED,
    MENGE 		INTEGER,
    PRIMARY KEY (REZEPTNR, ZUTATENNR)
);

CREATE TABLE IF NOT EXISTS krautundrueben.KATEGORIE (
    REZEPTNR BIGINT UNSIGNED NOT NULL,
    KATEGORIE VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS krautundrueben.ALLERGENE (
    REZEPTNR BIGINT UNSIGNED NOT NULL,
    ALLERGENE VARCHAR(50)
);


CREATE TABLE IF NOT EXISTS krautundrueben.BESTELLUNGREZEPT (
    BESTELLNR           BIGINT UNSIGNED,
    REZEPTNR            BIGINT UNSIGNED NOT NULL,
    MENGE               INTEGER,
    PRIMARY KEY (BESTELLNR, REZEPTNR)
);


ALTER TABLE ZUTAT ADD FOREIGN KEY (LIEFERANT) REFERENCES LIEFERANT (LIEFERANTENNR);
ALTER TABLE BESTELLUNGZUTAT ADD FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR);
ALTER TABLE BESTELLUNG ADD FOREIGN KEY (KUNDENNR) REFERENCES KUNDE (KUNDENNR);
ALTER TABLE BESTELLUNGZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT (ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (ZUTATENNR) REFERENCES ZUTAT (ZUTATENNR);
ALTER TABLE REZEPTZUTAT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE KATEGORIE ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE ALLERGENE ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE BESTELLUNGREZEPT ADD FOREIGN KEY (REZEPTNR) REFERENCES REZEPT (REZEPTNR);
ALTER TABLE BESTELLUNGREZEPT ADD FOREIGN KEY (BESTELLNR) REFERENCES BESTELLUNG (BESTELLNR);

ALTER TABLE KUNDE AUTO_INCREMENT=1;
ALTER TABLE ZUTAT AUTO_INCREMENT=10000;
ALTER TABLE LIEFERANT AUTO_INCREMENT=20000;
ALTER TABLE REZEPT AUTO_INCREMENT=30000;
ALTER TABLE BESTELLUNG AUTO_INCREMENT=50000;
